{{- if .Values.ingest.enabled }}
apiVersion: {{ template "common.capabilities.statefulset.apiVersion" . }}
kind: StatefulSet
metadata:
  name: {{ include "opensearch.ingest.fullname" . }}
  namespace: {{ include "common.names.namespace" . | quote }}
  labels: {{- include "common.labels.standard" . | nindent 4 }}
    {{- if .Values.commonLabels }}
    {{- include "common.tplvalues.render" ( dict "value" .Values.commonLabels "context" $ ) | nindent 4 }}
    {{- end }}
    app.kubernetes.io/component: ingest
spec:
  updateStrategy:
    type: {{ .Values.ingest.updateStrategy.type }}
    {{- if (eq "OnDelete" .Values.ingest.updateStrategy.type) }}
    rollingUpdate: null
    {{- end }}
  selector:
    matchLabels: {{- include "common.labels.matchLabels" . | nindent 6 }}
      app.kubernetes.io/component: ingest
  podManagementPolicy: Parallel
  replicas: {{ .Values.ingest.replicaCount }}
  serviceName: {{ template "opensearch.ingest.fullname" . }}-hl
  template:
    metadata:
      labels: {{- include "common.labels.standard" . | nindent 8 }}
        app.kubernetes.io/component: ingest
        {{- if .Values.ingest.podLabels }}
        {{- include "common.tplvalues.render" (dict "value" .Values.ingest.podLabels "context" $) | nindent 8 }}
        {{- end }}
      annotations:
        {{- if and (include "opensearch.transport.createTlsSecret" .) (not .Values.security.tls.transport.ingest.existingSecret) }}
        checksum/tls-transport-certificates: {{ include (print $.Template.BasePath "/transport-certificates.yaml") . | sha256sum }}
        {{- end }}
        {{- if and (include "opensearch.http.createTlsSecret" .) (not .Values.security.tls.http.ingest.existingSecret) }}
        checksum/tls-http-certificates: {{ include (print $.Template.BasePath "/http-certificates.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.security.tls.truststore.extraCACerts }}
        checksum/tls-configmap-ca-certs: {{ include (print $.Template.BasePath "/configmap-ca-certs.yaml") . | sha256sum }}
        {{- end }}
        {{- if .Values.extraSecretsKeystore.secrets }}
        checksum/tls-extraSecretsKeystore: {{ include (print $.Template.BasePath "/keystore-secrets.yaml") . | sha256sum }}
        {{- end }}
        checksum/tls-configmap-lib-scripts: {{ include (print $.Template.BasePath "/configmap-lib-scripts.yaml") . | sha256sum }}
        checksum/tls-configmap-os: {{ include (print $.Template.BasePath "/configmap-os.yaml") . | sha256sum }}
        checksum/tls-configmap-scripts: {{ include (print $.Template.BasePath "/configmap-scripts.yaml") . | sha256sum }}
        {{- if .Values.ingest.podAnnotations }}
        {{- include "common.tplvalues.render" (dict "value" .Values.ingest.podAnnotations "context" $) | nindent 8 }}
        {{- end }}
    spec:
      {{- if .Values.allocationAwareness.enabled }}
      topologySpreadConstraints:
        - maxSkew: 1
          topologyKey: {{ .Values.allocationAwareness.topologyKey }}
          whenUnsatisfiable: DoNotSchedule
          labelSelector:
            matchLabels:
              app.kubernetes.io/component: ingest
        - maxSkew: 1
          topologyKey: kubernetes.io/hostname
          whenUnsatisfiable: ScheduleAnyway
          labelSelector:
            matchLabels:
              app.kubernetes.io/component: ingest
      {{- end }}
      {{- include "opensearch.imagePullSecrets" . | nindent 6 }}
      {{- if .Values.ingest.hostAliases }}
      hostAliases: {{- include "common.tplvalues.render" (dict "value" .Values.ingest.hostAliases "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.ingest.schedulerName }}
      schedulerName: {{ .Values.ingest.schedulerName }}
      {{- end }}
      {{- if .Values.ingest.priorityClassName }}
      priorityClassName: {{ .Values.ingest.priorityClassName | quote }}
      {{- end }}
      {{- if .Values.ingest.affinity }}
      affinity: {{- include "common.tplvalues.render" (dict "value" .Values.ingest.affinity "context" $) | nindent 8 }}
      {{- else }}
      affinity:
        podAffinity: {{- include "common.affinities.pods" (dict "type" .Values.ingest.podAffinityPreset "component" "ingest" "context" $) | nindent 10 }}
        podAntiAffinity: {{- include "common.affinities.pods" (dict "type" .Values.ingest.podAntiAffinityPreset "component" "ingest" "context" $) | nindent 10 }}
        nodeAffinity: {{- include "common.affinities.nodes" (dict "type" .Values.ingest.nodeAffinityPreset.type "key" .Values.ingest.nodeAffinityPreset.key "values" .Values.ingest.nodeAffinityPreset.values) | nindent 10 }}
      {{- end }}
      {{- if .Values.ingest.nodeSelector }}
      nodeSelector: {{- include "common.tplvalues.render" (dict "value" .Values.ingest.nodeSelector "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.ingest.tolerations }}
      tolerations: {{- include "common.tplvalues.render" (dict "value" .Values.ingest.tolerations "context" $) | nindent 8 }}
      {{- end }}
      {{- if .Values.ingest.topologySpreadConstraints }}
      topologySpreadConstraints: {{- include "common.tplvalues.render" (dict "value" .Values.ingest.topologySpreadConstraints "context" $) | nindent 8 }}
      {{- end }}
      serviceAccountName: {{ template "opensearch.ingest.serviceAccountName" . }}
      {{- if or .Values.ingest.podSecurityContext.enabled .Values.ingest.securityContext.enabled }}
      securityContext:
        {{- if .Values.ingest.podSecurityContext.enabled }}
        {{- omit .Values.ingest.podSecurityContext "enabled" | toYaml | nindent 8 }}
        {{- else }}
        fsGroup: {{ .Values.ingest.securityContext.fsGroup }}
        {{- end }}
      {{- end }}
      {{- if or .Values.ingest.initContainers  .Values.sysctlImage.enabled }}
      initContainers:
        {{- if .Values.sysctlImage.enabled }}
        ## Image that performs the sysctl operation to modify Kernel settings (needed sometimes to avoid boot errors)
        - name: sysctl
          image: {{ include "opensearch.sysctl.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          command:
            - /bin/bash
            - -ec
            - |
              {{- include "opensearch.sysctlIfLess" (dict "key" "vm.max_map_count" "value" "262144") | nindent 14 }}
              {{- include "opensearch.sysctlIfLess" (dict "key" "fs.file-max" "value" "65536") | nindent 14 }}
          securityContext:
            privileged: true
          {{- if .Values.sysctlImage.resources }}
          resources: {{- toYaml .Values.sysctlImage.resources | nindent 12 }}
          {{- end }}
        {{- end }}
        {{- if .Values.ingest.initContainers }}
        {{- include "common.tplvalues.render" (dict "value" .Values.ingest.initContainers "context" $) | nindent 8 }}
        {{- end }}
      {{- end }}
      containers:
        - name: opensearch
          image: {{ include "opensearch.image" . }}
          imagePullPolicy: {{ .Values.image.pullPolicy | quote }}
          {{- if or .Values.ingest.containerSecurityContext.enabled .Values.ingest.securityContext.enabled }}
          securityContext:
            {{- if .Values.ingest.containerSecurityContext.enabled }}
            {{- omit .Values.ingest.containerSecurityContext "enabled" | toYaml | nindent 12 }}
            {{- else }}
            runAsUser: {{ .Values.ingest.securityContext.runAsUser }}
            {{- end }}
          {{- end }}
          {{- if .Values.diagnosticMode.enabled }}
          command: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.command "context" $) | nindent 12 }}
          args: {{- include "common.tplvalues.render" (dict "value" .Values.diagnosticMode.args "context" $) | nindent 12 }}
          {{- else }}
          command:
            - "/opt/opensearch/scripts/opensearch-docker-entrypoint.sh"
          {{- end }}
          env:
            - name: IMAGE_DEBUG
              value: {{ ternary "true" "false" (or .Values.image.debug .Values.diagnosticMode.enabled) | quote }}
            - name: WORKER_NODE_NAME
              valueFrom:
                fieldRef:
                  fieldPath: spec.nodeName
            - name: node.name
              valueFrom:
                fieldRef:
                  fieldPath: metadata.name
            {{- if .Values.plugins }}
            - name: OPENSEARCH_PLUGINS
              value: {{ .Values.plugins | quote }}
            {{- end }}
            {{- if .Values.allocationAwareness.enabled }}
            - name: OPENSEARCH_ALLOCATION_AWARENESS
              value: "true"
            - name: OPENSEARCH_TOPOLOGY_KEY
              value: {{ .Values.allocationAwareness.topologyKey | quote }}
            {{- end }}
            - name: discovery.seed_hosts
              {{- $releaseNamespace := .Release.Namespace }}
              {{- $clusterDomain := .Values.clusterDomain }}
              {{- $opensearchClusterManagerFullname := include "opensearch.cluster_manager.fullname" . }}
              {{- $replicas := int (ternary .Values.cluster_manager.autoscaling.minReplicas .Values.cluster_manager.replicaCount .Values.cluster_manager.autoscaling.enabled) }}
              value: {{ range $i, $e := until $replicas }}{{ $opensearchClusterManagerFullname }}-{{ $e }}.{{ $opensearchClusterManagerFullname }}-hl.{{ $releaseNamespace }}.svc.{{ $clusterDomain }},{{ end }}
            - name: cluster.name
              value: "{{ .Values.clusterName }}"
            - name: OPENSEARCH_JAVA_OPTS
              value: "{{ .Values.opensearchJavaOpts }}"
            {{- if .Values.security.tls.truststore.extraCACerts }}
            - name: OPENSEARCH_CACERTS_PATH
              value: "/tmp/cacerts"
            {{- end }}
            - name: node.roles
              value: "ingest"
            - name: DISABLE_INSTALL_DEMO_CONFIG
              value: "true"
            - name: READINESS_PROBE_PROTOCOL
              value: https
            - name: MONITORING_PASSWORD
              valueFrom:
                secretKeyRef:
                  {{- if not .Values.security.existingSecret }}
                  name: {{ template "common.names.fullname" . }}
                  {{- else }}
                  name: {{ .Values.security.existingSecret }}
                  {{- end }}
                  key: monitoring-password
            {{- if .Values.s3Snapshots.enabled }}
            - name: AWS_ACCESS_KEY_ID
              valueFrom:
                secretKeyRef:
                  name: {{ include "opensearch.s3Snapshots.secretName" . }}
                  key: {{ .Values.s3Snapshots.config.s3.client.default.existingSecretAccessKey | quote }}
            - name: AWS_SECRET_ACCESS_KEY
              valueFrom:
                secretKeyRef:
                  name: {{ include "opensearch.s3Snapshots.secretName" . }}
                  key: {{ .Values.s3Snapshots.config.s3.client.default.existingSecretSecretKey | quote }}
            {{- end }}
            {{- if .Values.extraEnvVars }}
            {{- include "common.tplvalues.render" ( dict "value" .Values.extraEnvVars "context" $ ) | nindent 12 }}
            {{- end }}
          {{- if or .Values.extraEnvVarsConfigMap .Values.extraEnvVarsSecret }}
          envFrom:
            {{- if .Values.extraEnvVarsConfigMap }}
            - configMapRef:
                name: {{ include "common.tplvalues.render" ( dict "value" .Values.extraEnvVarsConfigMap "context" $ ) }}
            {{- end }}
            {{- if .Values.extraEnvVarsSecret }}
            - secretRef:
                name: {{ include "common.tplvalues.render" ( dict "value" .Values.extraEnvVarsSecret "context" $ ) }}
            {{- end }}
          {{- end }}
          ports:
            - name: rest-api
              containerPort: {{ .Values.containerPorts.restAPI }}
            - name: transport
              containerPort: {{ .Values.containerPorts.transport }}
          {{- if not .Values.diagnosticMode.enabled }}
          {{- if .Values.ingest.startupProbe.enabled }}
          startupProbe:
            initialDelaySeconds: {{ .Values.ingest.startupProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.ingest.startupProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.ingest.startupProbe.timeoutSeconds }}
            successThreshold: {{ .Values.ingest.startupProbe.successThreshold }}
            failureThreshold: {{ .Values.ingest.startupProbe.failureThreshold }}
            exec:
              command:
                - /opt/opensearch/scripts/readiness-probe-script.sh
          {{- else if .Values.ingest.customStartupProbe }}
          startupProbe: {{- include "common.tplvalues.render" (dict "value" .Values.ingest.customStartupProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.ingest.livenessProbe.enabled }}
          livenessProbe:
            initialDelaySeconds: {{ .Values.ingest.livenessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.ingest.livenessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.ingest.livenessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.ingest.livenessProbe.successThreshold }}
            failureThreshold: {{ .Values.ingest.livenessProbe.failureThreshold }}
            exec:
              command:
                - /opt/opensearch/scripts/readiness-probe-script.sh
          {{- else if .Values.ingest.customLivenessProbe }}
          livenessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.ingest.customLivenessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- if .Values.ingest.readinessProbe.enabled }}
          readinessProbe:
            initialDelaySeconds: {{ .Values.ingest.readinessProbe.initialDelaySeconds }}
            periodSeconds: {{ .Values.ingest.readinessProbe.periodSeconds }}
            timeoutSeconds: {{ .Values.ingest.readinessProbe.timeoutSeconds }}
            successThreshold: {{ .Values.ingest.readinessProbe.successThreshold }}
            failureThreshold: {{ .Values.ingest.readinessProbe.failureThreshold }}
            exec:
              command:
                - /opt/opensearch/scripts/readiness-probe-script.sh
          {{- else if .Values.ingest.customReadinessProbe }}
          readinessProbe: {{- include "common.tplvalues.render" (dict "value" .Values.ingest.customReadinessProbe "context" $) | nindent 12 }}
          {{- end }}
          {{- end }}
          {{- if .Values.ingest.resources }}
          resources: {{- toYaml .Values.ingest.resources | nindent 12 }}
          {{- end }}
          volumeMounts:
            - mountPath: /usr/share/opensearch/config/opensearch.yml
              name: config
              subPath: opensearch.yml
            {{- if .Values.securityadmin.securityConfig.config }}
            - mountPath: /usr/share/opensearch/config/opensearch-security/config.yml
              name: securityconfig
              subPath: config.yml
            {{- end }}
            - name: data
              mountPath: /usr/share/opensearch/data
            - name: opensearch-http-certificates
              mountPath: /usr/share/opensearch/config/http-tls.key
              subPath: tls.key
              readOnly: true
            - name: opensearch-http-certificates
              mountPath: /usr/share/opensearch/config/http-tls.crt
              subPath: tls.crt
              readOnly: true
            - name: opensearch-http-certificates
              mountPath: /usr/share/opensearch/config/http-ca.crt
              subPath: ca.crt
              readOnly: true
            - name: opensearch-transport-certificates
              mountPath: /usr/share/opensearch/config/transport-tls.key
              subPath: tls.key
              readOnly: true
            - name: opensearch-transport-certificates
              mountPath: /usr/share/opensearch/config/transport-tls.crt
              subPath: tls.crt
              readOnly: true
            - name: opensearch-transport-certificates
              mountPath: /usr/share/opensearch/config/transport-ca.crt
              subPath: ca.crt
              readOnly: true
            {{- if .Values.security.tls.truststore.extraCACerts }}
            - name: ca-certificates
              mountPath: /tmp/cacerts
              readOnly: true
            {{- end }}
            - name: scripts
              mountPath: /opt/opensearch/scripts/
              readOnly: true
            - name: lib-scripts
              mountPath: /opt/scripts/
              readOnly: true
            {{- if or .Values.extraSecretsKeystore.existingSecret .Values.extraSecretsKeystore.secrets }}
            - name: keystore-secrets
              mountPath: /tmp/keystore-secrets
              readOnly: true
            {{- end }}
            {{- if .Values.extraConfig }}
            - mountPath: /usr/share/opensearch/config/my_opensearch.yml
              name: config
              subPath: my_opensearch.yml
            {{- end }}
            {{- if .Values.extraVolumeMounts }}
            {{- toYaml .Values.extraVolumeMounts | nindent 12 }}
            {{- end }}
        {{- if .Values.ingest.sidecars }}
        {{- include "common.tplvalues.render" ( dict "value" .Values.ingest.sidecars "context" $) | nindent 8 }}
        {{- end }}
      volumes:
        - name: config
          configMap:
            name: {{ include "common.names.fullname" . }}
            defaultMode: 420
        {{- if .Values.securityadmin.securityConfig.config }}
        - name: securityconfig
          configMap:
            name: {{ include "common.names.fullname" . }}-securityconfig
            defaultMode: 420
        {{- end }}
        - name: opensearch-transport-certificates
          secret:
            secretName: {{ include "opensearch.ingest.transport.tlsSecretName" . }}
            defaultMode: 420
        - name: opensearch-http-certificates
          secret:
            secretName: {{ include "opensearch.ingest.http.tlsSecretName" . }}
            defaultMode: 420
        {{- if .Values.security.tls.truststore.extraCACerts }}
        - name: ca-certificates
          configMap:
            name: {{ include "common.names.fullname" . }}-ca-certs
            defaultMode: 420
        {{- end }}
        - name: lib-scripts
          configMap:
            name: {{ include "common.names.fullname" . }}-lib-scripts
            defaultMode: 493
        - name: scripts
          configMap:
            name: {{ include "common.names.fullname" . }}-scripts
            defaultMode: 493
        {{- if or .Values.extraSecretsKeystore.existingSecret .Values.extraSecretsKeystore.secrets }}
        - name: keystore-secrets
          secret:
            secretName: {{ include "opensearch.extraSecretsKeystore.secretName" . }}
            defaultMode: 420
        {{- end }}
        {{- if .Values.extraVolumes }}
        {{- toYaml .Values.extraVolumes | nindent 8 }}
        {{- end }}
        - name: "data"
          emptyDir: {}
{{- end }}
